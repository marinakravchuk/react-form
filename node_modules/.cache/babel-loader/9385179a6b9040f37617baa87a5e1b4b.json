{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marina.kravchuk\\\\Documents\\\\GitHub\\\\react-form\\\\src\\\\components\\\\SomeInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SomeInput = props => {\n  _s();\n\n  /* var2 */\n  const nameInputRef = useRef();\n  /* var1 */\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [isEnteredNameValid, setIsEnteredNameValid] = useState(false);\n  const [wasNameInputToched, setWasNameInputToched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setIsEnteredNameValid(false);\n      return;\n    }\n\n    setIsEnteredNameValid(true);\n    console.log(enteredName);\n    console.log(nameInputRef.current.value);\n    setEnteredName('');\n    /*   nameInputRef.current.value= \"\";  not best practice*/\n  };\n\n  const isNameInputInvalid = !isEnteredNameValid && wasNameInputToched;\n  const nameInputClasses = isEnteredNameValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0418\\u043C\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), !isEnteredNameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SomeInput, \"z5SIvpxz79+4fy7HHalbOAy45Tc=\");\n\n_c = SomeInput;\nexport default SomeInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SomeInput\");","map":{"version":3,"names":["useState","useRef","SomeInput","props","nameInputRef","enteredName","setEnteredName","isEnteredNameValid","setIsEnteredNameValid","wasNameInputToched","setWasNameInputToched","nameInputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","console","log","current","isNameInputInvalid","nameInputClasses"],"sources":["C:/Users/marina.kravchuk/Documents/GitHub/react-form/src/components/SomeInput.js"],"sourcesContent":["import { useState, useRef } from \"react\"; \n\nconst SomeInput = (props) => {\n   /* var2 */\n  const nameInputRef=useRef()\n  /* var1 */\nconst [enteredName, setEnteredName] = useState(\"\") \nconst [isEnteredNameValid, setIsEnteredNameValid] = useState(false)\nconst [wasNameInputToched, setWasNameInputToched]  = useState(false)\n\nconst nameInputChangeHandler = (event) => {\n  setEnteredName(event.target.value)\n} \nconst formSubmitHandler = (event) => {\n  event.preventDefault();\n\n\nif (enteredName.trim() === \"\"){\n  setIsEnteredNameValid(false);\nreturn;\n}\nsetIsEnteredNameValid(true);\n\n\n  console.log(enteredName)\n  console.log(nameInputRef.current.value)\n  setEnteredName('')\n/*   nameInputRef.current.value= \"\";  not best practice*/\n}\n\nconst isNameInputInvalid = !isEnteredNameValid && wasNameInputToched\nconst nameInputClasses = isEnteredNameValid ? \"form-control\" : \"form-control invalid\"\n\n  return (\n    <form onSubmit= {formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Введите Имя</label>\n        <input ref={nameInputRef} type=\"text\" id=\"name\" onChange = {nameInputChangeHandler} \n        value={enteredName} />\n        {!isEnteredNameValid && <p className=\"error-text\">Введите имя</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button >Отправить</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SomeInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC1B;EACD,MAAMC,YAAY,GAACH,MAAM,EAAzB;EACA;;EACF,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA+CV,QAAQ,CAAC,KAAD,CAA7D;;EAEA,MAAMW,sBAAsB,GAAIC,KAAD,IAAW;IACxCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAGA,MAAMC,iBAAiB,GAAIH,KAAD,IAAW;IACnCA,KAAK,CAACI,cAAN;;IAGF,IAAIX,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA8B;MAC5BT,qBAAqB,CAAC,KAAD,CAArB;MACF;IACC;;IACDA,qBAAqB,CAAC,IAAD,CAArB;IAGEU,OAAO,CAACC,GAAR,CAAYd,WAAZ;IACAa,OAAO,CAACC,GAAR,CAAYf,YAAY,CAACgB,OAAb,CAAqBN,KAAjC;IACAR,cAAc,CAAC,EAAD,CAAd;IACF;EACC,CAfD;;EAiBA,MAAMe,kBAAkB,GAAG,CAACd,kBAAD,IAAuBE,kBAAlD;EACA,MAAMa,gBAAgB,GAAGf,kBAAkB,GAAG,cAAH,GAAoB,sBAA/D;EAEE,oBACE;IAAM,QAAQ,EAAGQ,iBAAjB;IAAA,wBACE;MAAK,SAAS,EAAEO,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,GAAG,EAAElB,YAAZ;QAA0B,IAAI,EAAC,MAA/B;QAAsC,EAAE,EAAC,MAAzC;QAAgD,QAAQ,EAAIO,sBAA5D;QACA,KAAK,EAAEN;MADP;QAAA;QAAA;QAAA;MAAA,QAFF,EAIG,CAACE,kBAAD,iBAAuB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJ1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA5CD;;GAAML,S;;KAAAA,S;AA8CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}