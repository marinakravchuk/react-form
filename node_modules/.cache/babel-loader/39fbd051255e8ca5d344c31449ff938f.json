{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marina.kravchuk\\\\Documents\\\\GitHub\\\\react-form\\\\src\\\\components\\\\SomeInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SomeInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [isEnteredNameValid, setIsEnteredNameValid] = useState(false);\n  const [wasNameInputTouched, setWasNameInputTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputLostFocusHandler = () => {\n    setWasNameInputTouched(true);\n    setIsEnteredNameValid(enteredName.trim() !== \"\");\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setWasNameInputTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setIsEnteredNameValid(false);\n      return;\n    }\n\n    setIsEnteredNameValid(true);\n    console.log(enteredName);\n    console.log(nameInputRef.current.value);\n    setEnteredName(\"\");\n  };\n\n  const isNameInputInvalid = !isEnteredNameValid && wasNameInputTouched;\n  const nameInputClasses = isNameInputInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0418\\u043C\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputLostFocusHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), isNameInputInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SomeInput, \"b+rGgUaby6S6x1AtjSg3BI5zUPk=\");\n\n_c = SomeInput;\nexport default SomeInput;\n/* import { useState, useRef } from \"react\"; \n\nconst SomeInput = (props) => {\n\n  const nameInputRef=useRef()\n \nconst [enteredName, setEnteredName] = useState(\"\") \nconst [isEnteredNameValid, setIsEnteredNameValid] = useState(false)\nconst [wasNameInputToched, setWasNameInputToched]  = useState(false) \n\nconst nameInputChangeHandler = (event) => {\n  setEnteredName(event.target.value)\n} \nconst nameinputLostFocusHandler = (event) => {\n  setWasNameInputToched(true)\n  if (enteredName.trim() === \"\"){\n    setIsEnteredNameValid(false);\n  return;\n  }\n}\n\nconst formSubmitHandler = (event) => {\n  event.preventDefault();\n  setWasNameInputToched(true)\n\nif (enteredName.trim() === \"\"){\n  setIsEnteredNameValid(false);\nreturn;\n}\nsetIsEnteredNameValid(true);\n\n\n  console.log(enteredName)\n  console.log(nameInputRef.current.value)\n  setEnteredName('') */\n\n/*   nameInputRef.current.value= \"\";  not best practice*/\n\n/* }\n\nconst isNameInputInvalid = !isEnteredNameValid && wasNameInputToched\nconst nameInputClasses = isNameInputInvalid ? \"form-control  invalid\" : \"form-control\"\n\n  return (\n    <form onSubmit= {formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Введите Имя</label>\n        <input ref={nameInputRef} type=\"text\" id=\"name\" onChange = {nameInputChangeHandler} \n        value={enteredName} onBlur={nameinputLostFocusHandler}  />\n        {isNameInputInvalid && <p className=\"error-text\">Введите имя</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button >Отправить</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SomeInput;\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"SomeInput\");","map":{"version":3,"names":["React","useState","useRef","SomeInput","props","nameInputRef","enteredName","setEnteredName","isEnteredNameValid","setIsEnteredNameValid","wasNameInputTouched","setWasNameInputTouched","nameInputChangeHandler","event","target","value","nameInputLostFocusHandler","trim","formSubmitHandler","preventDefault","console","log","current","isNameInputInvalid","nameInputClasses"],"sources":["C:/Users/marina.kravchuk/Documents/GitHub/react-form/src/components/SomeInput.js"],"sourcesContent":["\nimport React, { useState, useRef } from \"react\";\n\nconst SomeInput = (props) => {\n  const nameInputRef = useRef();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [isEnteredNameValid, setIsEnteredNameValid] = useState(false);\n  const [wasNameInputTouched, setWasNameInputTouched] = useState(false);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputLostFocusHandler = () => {\n    setWasNameInputTouched(true);\n    setIsEnteredNameValid(enteredName.trim() !== \"\");\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setWasNameInputTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setIsEnteredNameValid(false);\n      return;\n    }\n\n    setIsEnteredNameValid(true);\n    console.log(enteredName);\n    console.log(nameInputRef.current.value);\n    setEnteredName(\"\");\n  };\n\n  const isNameInputInvalid = !isEnteredNameValid && wasNameInputTouched;\n  const nameInputClasses = isNameInputInvalid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Введите Имя</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n          onBlur={nameInputLostFocusHandler}\n        />\n        {isNameInputInvalid && <p className=\"error-text\">Введите имя</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Отправить</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SomeInput;\n\n\n\n\n\n/* import { useState, useRef } from \"react\"; \n\nconst SomeInput = (props) => {\n\n  const nameInputRef=useRef()\n \nconst [enteredName, setEnteredName] = useState(\"\") \nconst [isEnteredNameValid, setIsEnteredNameValid] = useState(false)\nconst [wasNameInputToched, setWasNameInputToched]  = useState(false) \n\nconst nameInputChangeHandler = (event) => {\n  setEnteredName(event.target.value)\n} \nconst nameinputLostFocusHandler = (event) => {\n  setWasNameInputToched(true)\n  if (enteredName.trim() === \"\"){\n    setIsEnteredNameValid(false);\n  return;\n  }\n}\n\nconst formSubmitHandler = (event) => {\n  event.preventDefault();\n  setWasNameInputToched(true)\n\nif (enteredName.trim() === \"\"){\n  setIsEnteredNameValid(false);\nreturn;\n}\nsetIsEnteredNameValid(true);\n\n\n  console.log(enteredName)\n  console.log(nameInputRef.current.value)\n  setEnteredName('') */\n/*   nameInputRef.current.value= \"\";  not best practice*/\n/* }\n\nconst isNameInputInvalid = !isEnteredNameValid && wasNameInputToched\nconst nameInputClasses = isNameInputInvalid ? \"form-control  invalid\" : \"form-control\"\n\n  return (\n    <form onSubmit= {formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Введите Имя</label>\n        <input ref={nameInputRef} type=\"text\" id=\"name\" onChange = {nameInputChangeHandler} \n        value={enteredName} onBlur={nameinputLostFocusHandler}  />\n        {isNameInputInvalid && <p className=\"error-text\">Введите имя</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button >Отправить</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SomeInput;\n */"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,YAAY,GAAGH,MAAM,EAA3B;EAEA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAAC,KAAD,CAA9D;;EAEA,MAAMW,sBAAsB,GAAIC,KAAD,IAAW;IACxCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,yBAAyB,GAAG,MAAM;IACtCL,sBAAsB,CAAC,IAAD,CAAtB;IACAF,qBAAqB,CAACH,WAAW,CAACW,IAAZ,OAAuB,EAAxB,CAArB;EACD,CAHD;;EAKA,MAAMC,iBAAiB,GAAIL,KAAD,IAAW;IACnCA,KAAK,CAACM,cAAN;IACAR,sBAAsB,CAAC,IAAD,CAAtB;;IAEA,IAAIL,WAAW,CAACW,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BR,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IAEDA,qBAAqB,CAAC,IAAD,CAArB;IACAW,OAAO,CAACC,GAAR,CAAYf,WAAZ;IACAc,OAAO,CAACC,GAAR,CAAYhB,YAAY,CAACiB,OAAb,CAAqBP,KAAjC;IACAR,cAAc,CAAC,EAAD,CAAd;EACD,CAbD;;EAeA,MAAMgB,kBAAkB,GAAG,CAACf,kBAAD,IAAuBE,mBAAlD;EACA,MAAMc,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;EAEA,oBACE;IAAM,QAAQ,EAAEL,iBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEM,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEnB,YADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAEO,sBAJZ;QAKE,KAAK,EAAEN,WALT;QAME,MAAM,EAAEU;MANV;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGO,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAaE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CArDD;;GAAMpB,S;;KAAAA,S;AAuDN,eAAeA,SAAf;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}